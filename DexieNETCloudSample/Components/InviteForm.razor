
<MudHidden Hidden=@(!Scope.CanAddMember())>
    <MudTable Class="mt-2" T="string" Items=@(Scope.Users)>
        <ColGroup>
            <col />
            <col style="width:50px;" />
        </ColGroup>
        <HeaderContent>
            <MudTh>Invite User</MudTh>
            <MudTh Style="text-align:center">
                <MudIcon Icon="@Icons.Material.Filled.PersonAdd" />
            </MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Invite User"><MudText>@context</MudText></MudTd>
            <MudTd DataLabel="Invite" Style="text-align:center">
                <MudIconButtonAsyncRx Color="Color.Info" Icon=@Icons.Material.Filled.PersonAdd StateCommand=@Scope.Service.CommandAsync
                                      CanChangeCallback=@Scope.CanAddMember ExecuteAsyncCallback=@AddMember(context) />
            </MudTd>
        </RowTemplate>
    </MudTable>
</MudHidden>

@code {
    [Inject]
    public required DexieCloudService DBService { get; init; }

    [Inject]
    public required IDialogService DialogService { get; init; }

    [CascadingParameter]
    public required ToDoListMemberService.MemberScope Scope { get; init; }
    
    private IEnumerable<string> _users = [];
    
    private Func<IStateCommandAsync, Task> AddMember(string user) => async _ =>
    {
        if (user == Scope.Users.Last())
        {
            ArgumentNullException.ThrowIfNull(DialogService);

            EmailData data = new("email@mydomain.com");

            var parameters = new DialogParameters { ["Item"] = data };
            var dialog = await DialogService.ShowAsync<AuthenticateEMail>("Email for Invite", parameters);

            var result = await dialog.Result;
            if (!result.OK())
            {
                return;
            }

            user = data.Email;
        }
        else
        {
            var parameters = new DialogParameters
                { ["Message"] = $"Invite {user}", ["ConfirmButton"] = "Invite", ["SuccessOnConfirm"] = true };
            var dialog = await DialogService.ShowAsync<ConfirmDialog>("Invite USER", parameters);

            var res = await dialog.Result;

            if (!res.OK())
            {
                return;
            }
        }

        await Scope.AddMember(user);
    };
}
