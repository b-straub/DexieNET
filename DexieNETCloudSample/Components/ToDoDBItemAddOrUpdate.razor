@inherits RxBLStateSubscriber<ToDoItemService>

@if (AddMode)
{
    <MudFabAsyncRx StateCommand=@Owner.CommandAsync CanChangeCallback=@Owner.CanAdd Class="mr-2" Color="Color.Success" StartIcon="@Icons.Material.Filled.Add" Size="Size.Small" HasProgress=@false ExecuteAsyncCallback=@ShowAddUpdateDialog />
}
else
{
    <MudIconButtonAsyncRx StateCommand=@Owner.CommandAsync CanChangeCallback=@Owner.CanUpdateItem(Item) Color="Color.Info" Icon=@Icons.Material.Filled.Edit ExecuteAsyncCallback=@ShowAddUpdateDialog />
}

@code {
    [Parameter, EditorRequired]
    public required bool AddMode { get; init; }

    [Parameter, EditorRequired]
    public required ToDoDBItem Item { get; init; }

    [Inject]
    public required IDialogService DialogService { get; init; }

    private async Task ShowAddUpdateDialog(IStateCommandAsync _)
    {
        using var itemInput = Owner.CreateItemInput(Item);
        var parameters = new DialogParameters { ["Item"] = Item, ["Owner"] = itemInput };
        var dialog = await DialogService.ShowAsync<AddToDoItem>(AddMode ? "Add ToDo" : "Edit ToDo", parameters);
        var result = await dialog.Result;

        if (result.OK())
        {
            var scope = (ToDoItemService.ToDoItemItemInput?)result.Data;
            if (scope is not null)
            {
                await scope.SubmitAsync();
            }
        }
    }
}
