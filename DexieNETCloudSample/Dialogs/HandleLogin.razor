@using DexieNET
@inherits RxBLServiceSubscriber<DexieCloudService>

<MudMenu Disabled=@(users.Count() == 0)>
    <ActivatorContent>
        <MudIconButton Icon="@Icons.Material.Outlined.People" Color="Color.Inherit">
            "Sign in or create your account"
        </MudIconButton>
    </ActivatorContent>
    <ChildContent>
        @if (Service.UserLogin.HasValue() && Service.UserLogin.Value.IsLoggedIn)
        {
            <MudMenuItem OnClick=@Logout OnTouch=@Logout>Sign Out: @Service.UserLogin.Value.UserId</MudMenuItem>
        }
        else
        {
            foreach (var user in users)
            {
                <MudMenuItem OnClick=@(async () => await Login(user))
                     OnTouch=@(async () => await Login(user))>
                    @user
                </MudMenuItem>
            }
            <MudMenuItem OnClick=@(async () => await Login())
                     OnTouch=@(async () => await Login())>
                Sign in / sign up yourself
            </MudMenuItem>
        }
    </ChildContent>
</MudMenu>


@code {
    [Inject]
    public required IDialogService DialogService { get; init; }

    [Inject]
    public required ISnackbar Snackbar { get; init; }

    [Inject]
    public required IConfiguration Configuration { get; init; }

    private IEnumerable<string> users = Enumerable.Empty<string>();

    protected override void OnInitialized()
    {
        users = Configuration.GetUsers();
    }

    private async Task Logout()
    {
        await Service.Logout();
    }

    private async ValueTask Login(string? eMail = null)
    {
        string? error = null;

        if (eMail is not null)
        {
            LoginInformation li = new(eMail, null, GrantType.DEMO);
            error = await Service.Login(li);
        }
        else
        {
            EmailData data = new("email@mydomain.com");

            var parameters = new DialogParameters { ["Item"] = data };
            var dialog = DialogService.Show<AuthenticateEMail>("Email for Login", parameters);

            var result = await dialog.Result;
            if (!result.Canceled)
            {
                data = (EmailData)result.Data;
                LoginInformation li = new(data.Email, null, GrantType.OTP);
                error = await Service.Login(li);
            }
        }

        if (error is not null)
        {
            Snackbar.Add(error, Severity.Error);
        }
    }
}
