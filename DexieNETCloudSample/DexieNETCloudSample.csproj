<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

	<PropertyGroup>
		<TargetFramework>net9.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<ServiceWorkerAssetsManifest>service-worker-assets.js</ServiceWorkerAssetsManifest>
	</PropertyGroup>

	<ItemGroup>
		<ProjectReference Include="..\DexieCloudNET\DexieCloudNET.csproj"
			Condition="'$(Configuration)' == 'Debug'" />
		<ProjectReference Include="..\DexieNETTableGenerator\DexieNETTableGenerator.csproj"
			OutputItemType="Analyzer" Condition="'$(Configuration)' == 'Debug'" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="DexieCloudNET" Version="1.3.4" Condition="'$(Configuration)' == 'Release'" />
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="9.0.2" />
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="9.0.2" PrivateAssets="all" />
		<PackageReference Include="RxMudBlazorLight" Version="0.9.9" />
	</ItemGroup>

	<ItemGroup>
		<ServiceWorker Include="wwwroot\service-worker.js"
			PublishedContent="wwwroot\service-worker.published.js" />
		<None Include="wwwroot\.htaccess" />
	</ItemGroup>

	<Target Name="CopyWwwroot" AfterTargets="Build">
		<ItemGroup>
			<CopyItems Include="Dexie\*.json" />
		</ItemGroup>
		<Copy SourceFiles="@(CopyItems)" DestinationFolder="wwwroot" SkipUnchangedFiles="false" />
	</Target>

	<ItemGroup>
		<Content Update="wwwroot\*.json">
			<CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</Content>
	</ItemGroup>

	<UsingTask TaskName="ReplaceRegexInFile" TaskFactory="RoslynCodeTaskFactory"
		AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<Filename ParameterType="System.String" Required="true" />
			<Default ParameterType="System.String" Required="true" />
			<Match ParameterType="System.String" Required="true" />
			<Settings ParameterType="System.String" />
			<Node ParameterType="System.String" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Using Namespace="System.Xml" />
			<Code Type="Fragment" Language="cs">
        <![CDATA[
			var replace = Default;

			try
			{
				var doc = new XmlDocument();
				doc.Load(Settings);
				var node = doc.DocumentElement.SelectSingleNode(Node);
				replace = node.InnerText.Trim();
			}
			catch {}

			try
			{
				var input = File.ReadAllText(Filename);
				File.WriteAllText(Filename, Regex.Replace(input, Match, $"$1{replace}$3"));
				Log.LogMessage(MessageImportance.High, $"Replaced {Match} in {Filename} with {replace}");
			}
			catch(Exception ex)
			{
				Log.LogError(ex.Message);
			}
        ]]>
      </Code>
		</Task>
	</UsingTask>

	<Target Name="ReleaseSubfolder" Condition="'$(Configuration)'=='Release'" AfterTargets="Build">
		<ReplaceRegexInFile
			Filename="wwwroot\index.html"
			Default="/"
			Match="(&lt;base href=&quot;)(.*)(&quot; /&gt;)"
			Settings="Properties\Settings.xml"
			Node="RootFolder"
		/>

		<ReplaceRegexInFile
			Filename="wwwroot\service-worker.published.js"
			Default="/"
			Match="(const base = &quot;)(.*)(&quot;)"
			Settings="Properties\Settings.xml"
			Node="RootFolder"
		/>
	</Target>

	<Target Name="DebugSubfolder" Condition="'$(Configuration)'=='Debug'" AfterTargets="Build">
		<ReplaceRegexInFile
			Filename="wwwroot\index.html"
			Match="(&lt;base href=&quot;)(.*)(&quot; /&gt;)"
			Default="/"
		/>

		<ReplaceRegexInFile
			Filename="wwwroot\service-worker.published.js"
			Match="(const base = &quot;)(.*)(&quot;)"
			Default="/"
		/>
	</Target>

</Project>